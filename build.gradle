plugins {
    id 'fabric-loom' version '1.0+'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

//Shadow
tasks.remapJar.dependsOn(shadowJar)
(tasks.remapJar.input as FileSystemLocationProperty<? extends FileSystemLocation>).set(shadowJar.archivePath)

// Dummy configuration
configurations {
    shade
}

// Relocating a Package
shadowJar {
    configurations = [project.configurations.shade]
    relocate 'io.netty', 'discordfabriclink.shaded.io.netty'

    // Compatibility with Gunpowder
    relocate 'com.fasterxml.jackson', 'discordfabriclink.shaded.com.fasterxml.jackson'
    relocate 'org.slf4j', 'discordfabriclink.shaded.org.slf4j'
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Auto config 1.18.x
    modApi("me.shedaniel.cloth:cloth-config-fabric:6.1.48") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //Discord4J
    implementation("com.discord4j:discord4j-core:3.2.1")
    shade("com.discord4j:discord4j-core:3.2.1")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}